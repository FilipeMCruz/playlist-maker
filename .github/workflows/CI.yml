name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    tags: [ v*.*.* ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  deploy:
    name: Deploy
    needs: [ build ]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.job.os }}
    strategy: 
      matrix:
        job:
          - { os: ubuntu-latest  , target: arm-unknown-linux-gnueabihf , use-cross: true }
          - { os: ubuntu-latest  , target: x86_64-unknown-linux-musl   , use-cross: true }
          - { os: macos-latest   , target: x86_64-apple-darwin }
          - { os: windows-latest , target: x86_64-pc-windows-msvc }
    steps:
      - uses: actions/checkout@v2
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.job.use-cross }}
          command: build
          args: --release --target ${{ matrix.job.target }}
      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.job.target }}/release          
          if [ "${{ matrix.job.os }}" = "windows-latest" ]; then
            7z a ../../../playlist-maker-${{ matrix.job.target }}.zip playlist-maker.exe
          elif [ "${{ matrix.job.os }}" = "macos-latest" ]; then
            zip ../../../playlist-maker-${{ matrix.job.target }}.zip playlist-maker
          else
            tar czvf ../../../playlist-maker-${{ matrix.job.target }}.tar.gz playlist-maker
          fi
          cd -
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
            files: 'playlist-maker*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
